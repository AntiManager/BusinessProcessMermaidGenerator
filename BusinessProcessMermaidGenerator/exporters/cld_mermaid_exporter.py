"""
–≠–∫—Å–ø–æ—Ä—Ç Causal Loop Diagram –≤ Mermaid —Ñ–æ—Ä–º–∞—Ç
"""
from pathlib import Path
from typing import List, Dict
from models import CausalAnalysis, Choices
from utils import safe_id, escape_text
from config import ENCODING

def build_cld_mermaid(causal_analysis: CausalAnalysis, choices: Choices) -> str:
    """
    –°—Ç—Ä–æ–∏—Ç Mermaid –∫–æ–¥ –¥–ª—è Causal Loop Diagram - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
    """
    lines = ["```mermaid", "graph TD"]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É–∑–ª—ã (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ) –∫–∞–∫ –æ–≤–∞–ª—ã
    for variable in sorted(causal_analysis.variables):
        lines.append(f'    {safe_id(variable)}(["{escape_text(variable)}"])')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤—è–∑–∏
    for link in causal_analysis.links:
        if not link.include_in_cld:
            continue
            
        source_id = safe_id(link.source)
        target_id = safe_id(link.target)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º label –¥–ª—è —Å—Ç—Ä–µ–ª–∫–∏
        label_parts = []
        
        if choices.cld_influence_signs:
            # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–æ–≤ + –∏ - –¥–ª—è Mermaid
            if link.influence == "+":
                influence_symbol = '"+"'  # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø–ª—é—Å –≤ –∫–∞–≤—ã—á–∫–∞—Ö
            elif link.influence == "-":
                influence_symbol = '"-"'  # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –º–∏–Ω—É—Å –≤ –∫–∞–≤—ã—á–∫–∞—Ö  
            else:
                influence_symbol = link.influence
            label_parts.append(influence_symbol)
        
        if choices.show_cld_operations and link.operation:
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
            op_text = link.operation
            if len(op_text) > 20:
                op_text = op_text[:17] + "..."
            label_parts.append(op_text)
        
        label = " ".join(label_parts)
        
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Mermaid
        # –í–º–µ—Å—Ç–æ escape_text –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–≤—ã—á–µ–∫
        escaped_label = label.replace('"', '&quot;')
        
        # üî• –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML entities –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        # escaped_label = label.replace('+', '&#43;').replace('-', '&#45;').replace('"', '&quot;')
        
        lines.append(f'    {source_id} -- "{escaped_label}" --> {target_id}')
    
    lines.append("```")
    return "\n".join(lines)

def export_cld_mermaid(causal_analysis: CausalAnalysis, choices: Choices, 
                      output_base: str = None) -> Path:
    """
    –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç CLD –≤ Markdown —Ñ–∞–π–ª - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –í–û–ó–í–†–ê–¢–û–ú Path
    """
    if output_base is None:
        output_base = "causal_loop_diagram"
    
    output_file = Path(f"{output_base}.md")
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Mermaid –∫–æ–¥–∞
    mermaid_code = build_cld_mermaid(causal_analysis, choices)
    
    # –°–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    content_parts = [
        "# Causal Loop Diagram\n\n",
        "## –î–∏–∞–≥—Ä–∞–º–º–∞ –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π\n\n",
        mermaid_code,
        "\n\n## –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è\n\n",
        f"### üéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è\n\n",
        f"–î–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π –¥–æ—Å—Ç—É–ø–Ω–∞ [–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è]({output_base}_cld.html).\n\n",
        f"**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏:**\n",
        f"- üîç –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–µ–π\n", 
        f"- üìä –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ø–µ—Ç–µ–ª—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏\n",
        f"- üéØ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø–∞–º –≤–ª–∏—è–Ω–∏—è\n",
        f"- üìà –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n",
        "## –†–µ–µ—Å—Ç—Ä –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π\n\n"
    ]
    
    # –¢–∞–±–ª–∏—Ü–∞ —Å–≤—è–∑–µ–π
    headers = ["–ò—Å—Ç–æ—á–Ω–∏–∫", "–¶–µ–ª—å", "–í–ª–∏—è–Ω–∏–µ", "–û–ø–µ—Ä–∞—Ü–∏—è", "–°–∏–ª–∞ –≤–ª–∏—è–Ω–∏—è", "–û–ø–∏—Å–∞–Ω–∏–µ"]
    rows = []
    
    for link in causal_analysis.links:
        if link.include_in_cld:
            rows.append({
                "–ò—Å—Ç–æ—á–Ω–∏–∫": link.source,
                "–¶–µ–ª—å": link.target,
                "–í–ª–∏—è–Ω–∏–µ": link.influence,
                "–û–ø–µ—Ä–∞—Ü–∏—è": link.operation or "-",
                "–°–∏–ª–∞ –≤–ª–∏—è–Ω–∏—è": link.strength or "-",
                "–û–ø–∏—Å–∞–Ω–∏–µ": link.description
            })
    
    # –°–æ–∑–¥–∞–µ–º Markdown —Ç–∞–±–ª–∏—Ü—É
    if rows:
        content_parts.append("| " + " | ".join(headers) + " |\n")
        content_parts.append("|" + "|".join(["---"] * len(headers)) + "|\n")
        
        for row in rows:
            values = [str(row.get(h, "")) for h in headers]
            content_parts.append("| " + " | ".join(values) + " |\n")
    else:
        content_parts.append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–≤—è–∑—è—Ö\n")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ç–ª—è—Ö –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    if causal_analysis.feedback_loops:
        content_parts.append("\n## –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–µ—Ç–ª–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏\n\n")
        for i, loop in enumerate(causal_analysis.feedback_loops, 1):
            content_parts.append(f"{i}. {' ‚Üí '.join(loop)}\n")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    content_parts.extend([
        f"\n\n## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n",
        f"- **–ü–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö**: {len(causal_analysis.variables)}\n",
        f"- **–°–≤—è–∑–µ–π**: {len([l for l in causal_analysis.links if l.include_in_cld])}\n",
        f"- **–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–ª–∏—è–Ω–∏–π**: {len([l for l in causal_analysis.links if l.include_in_cld and l.influence == '+' ])}\n",
        f"- **–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –≤–ª–∏—è–Ω–∏–π**: {len([l for l in causal_analysis.links if l.include_in_cld and l.influence == '-' ])}\n",
        f"- **–ü–µ—Ç–µ–ª—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏**: {len(causal_analysis.feedback_loops)}\n",
    ])
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    output_file.write_text("".join(content_parts), encoding=ENCODING)
    
    print(f"\n" + "="*60)
    print("‚úì CAUSAL LOOP DIAGRAM –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù!")
    print("="*60)
    print(f"–§–∞–π–ª: {output_file}")
    print(f"–°–≤—è–∑–µ–π: {len([l for l in causal_analysis.links if l.include_in_cld])}")
    print(f"–ü–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {len(causal_analysis.variables)}")
    print(f"–ü–µ—Ç–µ–ª—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: {len(causal_analysis.feedback_loops)}")
    
    return output_file