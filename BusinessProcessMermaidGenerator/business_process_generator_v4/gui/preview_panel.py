"""
–ü–∞–Ω–µ–ª—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ Markdown —Å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º Mermaid
"""
from PyQt6.QtWidgets import QWidget, QVBoxLayout, QTabWidget
from PyQt6.QtWebEngineWidgets import QWebEngineView
from PyQt6.QtWebEngineCore import QWebEngineSettings
from PyQt6.QtCore import QUrl
from utils.mermaid_renderer import MermaidRenderer

class PreviewPanel(QWidget):
    def __init__(self):
        super().__init__()
        self.mermaid_renderer = MermaidRenderer()
        self.init_ui()
    
    def init_ui(self):
        layout = QVBoxLayout(self)
        
        self.tabs = QTabWidget()
        
        # –í–∫–ª–∞–¥–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.preview_view = QWebEngineView()
        self.preview_view.settings().setAttribute(
            QWebEngineSettings.WebAttribute.JavascriptEnabled, True
        )
        self.tabs.addTab(self.preview_view, "üëÄ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä")
        
        # –í–∫–ª–∞–¥–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ HTML
        self.source_view = QWebEngineView()
        self.tabs.addTab(self.source_view, "üìÑ –ò—Å—Ö–æ–¥–Ω–∏–∫")
        
        layout.addWidget(self.tabs)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.show_initial_message()
    
    def show_initial_message(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        initial_html = """<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <style>
        body { 
            font-family: Arial, sans-serif; 
            padding: 40px; 
            text-align: center;
            color: #666;
        }
    </style>
</head>
<body>
    <h2>Business Process Generator v4.0</h2>
    <p>–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –¥–∏–∞–≥—Ä–∞–º–º—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ Markdown –∫–æ–¥ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞</p>
</body>
</html>"""
        self.preview_view.setHtml(initial_html)
        self.source_view.setHtml(f"<pre>{initial_html}</pre>")
    
    def update_preview(self, markdown_content):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º Mermaid"""
        try:
            if not markdown_content:
                self.show_initial_message()
                return
                
            html_content = self.mermaid_renderer.render(markdown_content)
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º HTML –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
            self.preview_view.setHtml(html_content, QUrl(""))
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –≤–æ –≤—Ç–æ—Ä–æ–π –≤–∫–ª–∞–¥–∫–µ
            escaped_html = html_content.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')
            source_html = f"<pre style='padding: 20px; font-family: monospace;'>{escaped_html}</pre>"
            self.source_view.setHtml(source_html, QUrl(""))
            
        except Exception as e:
            error_html = f"""<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <style>
        body {{ font-family: Arial, sans-serif; padding: 20px; }}
        .error {{ background: #ffebee; padding: 15px; border-radius: 5px; }}
    </style>
</head>
<body>
    <h3>–û—à–∏–±–∫–∞ –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ:</h3>
    <div class="error">
        <pre>{str(e)}</pre>
    </div>
</body>
</html>"""
            self.preview_view.setHtml(error_html)