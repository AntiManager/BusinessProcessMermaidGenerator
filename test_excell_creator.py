"""
Создание тестового Excel файла для тестирования CLD модуля
"""
import pandas as pd
from pathlib import Path

def create_test_excel_file():
    """Создает тестовый Excel файл с бизнес-процессом и CLD данными"""
    
    # Данные для вкладки бизнес-процесса
    business_process_data = [
        # Операция, Входы, Выход, Группа, Владелец, Подробное описание операции
        ["Прием заказа", "Запрос клиента", "Подтвержденный заказ", "Продажи", "Менеджер", "Проверка доступности товара и подтверждение заказа"],
        ["Проверка наличия", "Подтвержденный заказ", "Информация о наличии", "Склад", "Кладовщик", "Проверка наличия товара на складе"],
        ["Резервирование товара", "Информация о наличии", "Зарезервированный товар", "Склад", "Кладовщик", "Резервирование товара для заказа"],
        ["Формирование счета", "Зарезервированный товар", "Счет на оплату", "Финансы", "Бухгалтер", "Создание счета с учетом доставки и налогов"],
        ["Отправка счета", "Счет на оплату", "Счет отправлен", "Продажи", "Менеджер", "Отправка счета клиенту по email"],
        ["Ожидание оплаты", "Счет отправлен", "Оплата получена", "Финансы", "Бухгалтер", "Ожидание поступления оплаты от клиента"],
        ["Подготовка к отгрузке", "Оплата получена;Зарезервированный товар", "Товар упакован", "Склад", "Кладовщик", "Упаковка товара и подготовка к отправке"],
        ["Оформление доставки", "Товар упакован", "Товар передан в доставку", "Логистика", "Логист", "Оформление доставки через курьерскую службу"],
        ["Отслеживание доставки", "Товар передан в доставку", "Товар доставлен", "Логистика", "Логист", "Мониторинг статуса доставки"],
        ["Подтверждение получения", "Товар доставлен", "Получение подтверждено", "Продажи", "Менеджер", "Подтверждение получения от клиента"],
        ["Закрытие заказа", "Получение подтверждено", "Заказ закрыт", "Продажи", "Менеджер", "Окончательное закрытие заказа в системе"],
        ["Обработка возвратов", "Запрос на возврат", "Возврат обработан", "Сервис", "Менеджер", "Обработка запросов на возврат товара"],
        ["Прием жалоб", "Жалоба клиента", "Жалоба зарегистрирована", "Сервис", "Менеджер", "Регистрация и классификация жалоб"],
        ["Расследование жалобы", "Жалоба зарегистрирована", "Причина жалобы", "Сервис", "Менеджер", "Анализ причин возникновения жалобы"],
        ["Решение по жалобе", "Причина жалобы", "Жалоба решена", "Сервис", "Менеджер", "Принятие решения по устранению жалобы"],
        ["Учет качества", "Причина жалобы", "Данные о качестве", "Качество", "Менеджер качества", "Сбор статистики по качеству товаров"],
        ["Анализ качества", "Данные о качестве", "Отчет о качестве", "Качество", "Менеджер качества", "Анализ тенденций качества продукции"],
        ["Корректирующие действия", "Отчет о качестве", "План улучшений", "Производство", "Директор", "Разработка плана улучшения качества"],
        ["Закупка материалов", "План улучшений;Данные о спросе", "Материалы закуплены", "Закупки", "Закупщик", "Закупка материалов для производства"],
        ["Производство", "Материалы закуплены", "Готовая продукция", "Производство", "Производственник", "Производство товаров согласно плану"],
        ["Контроль качества", "Готовая продукция", "Товар проверен", "Качество", "Контролер", "Проверка качества готовой продукции"],
        ["Поступление на склад", "Товар проверен", "Товар на складе", "Склад", "Кладовщик", "Размещение товара на складе"],
        ["Учет остатков", "Товар на складе;Товар продан", "Остатки на складе", "Склад", "Кладовщик", "Обновление данных об остатках"],
        ["Прогнозирование спроса", "Исторические продажи;Сезонность", "Прогноз спроса", "Аналитика", "Аналитик", "Прогнозирование будущего спроса"],
        ["Планирование закупок", "Прогноз спроса;Остатки на складе", "План закупок", "Закупки", "Закупщик", "Планирование объемов закупок"]
    ]

    business_process_df = pd.DataFrame(
        business_process_data,
        columns=["Операция", "Входы", "Выход", "Группа", "Владелец", "Подробное описание операции"]
    )

    # Данные для вкладки CLD (причинно-следственные связи)
    cld_data = [
        # Источник, Цель, Знак влияния, Сила влияния, Операция, Учитывать в CLD, Описание
        ["Количество клиентов", "Количество заказов", "+", "Высокая", "Маркетинг", True, "Чем больше клиентов, тем больше заказов"],
        ["Количество заказов", "Загрузка склада", "+", "Средняя", "Обработка заказов", True, "Рост заказов увеличивает нагрузку на склад"],
        ["Загрузка склада", "Время обработки", "+", "Высокая", "Складские процессы", True, "Высокая загрузка увеличивает время обработки"],
        ["Время обработки", "Удовлетворенность клиентов", "-", "Высокая", "Обслуживание", True, "Долгая обработка снижает удовлетворенность"],
        ["Удовлетворенность клиентов", "Количество клиентов", "+", "Средняя", "Удержание клиентов", True, "Довольные клиенты приводят новых"],
        ["Удовлетворенность клиентов", "Количество жалоб", "-", "Высокая", "Обратная связь", True, "Низкая удовлетворенность ведет к жалобам"],
        ["Количество жалоб", "Затраты на поддержку", "+", "Средняя", "Сервис", True, "Жалобы требуют ресурсов на обработку"],
        ["Затраты на поддержку", "Прибыль", "-", "Средняя", "Финансы", True, "Рост затрат снижает прибыль"],
        ["Прибыль", "Инвестиции в качество", "+", "Низкая", "Развитие", True, "Прибыль позволяет инвестировать в качество"],
        ["Инвестиции в качество", "Качество продукции", "+", "Высокая", "Производство", True, "Инвестиции улучшают качество"],
        ["Качество продукции", "Количество жалоб", "-", "Высокая", "Контроль качества", True, "Высокое качество снижает жалобы"],
        ["Качество продукции", "Удовлетворенность клиентов", "+", "Высокая", "Восприятие клиентов", True, "Качество повышает удовлетворенность"],
        ["Количество заказов", "Выручка", "+", "Высокая", "Продажи", True, "Заказы напрямую влияют на выручку"],
        ["Выручка", "Прибыль", "+", "Средняя", "Финансы", True, "Рост выручки увеличивает прибыль"],
        ["Цены", "Количество заказов", "-", "Средняя", "Ценообразование", True, "Высокие цены могут снижать количество заказов"],
        ["Цены", "Выручка", "+", "Высокая", "Финансы", True, "Рост цен увеличивает выручку при прочих равных"],
        ["Конкуренция", "Количество клиентов", "-", "Высокая", "Рынок", True, "Высокая конкуренция снижает приток клиентов"],
        ["Качество продукции", "Лояльность клиентов", "+", "Высокая", "Маркетинг", True, "Качество повышает лояльность"],
        ["Лояльность клиентов", "Количество клиентов", "+", "Средняя", "Удержание", True, "Лояльные клиенты остаются и рекомендуют"],
        ["Рекламный бюджет", "Количество клиентов", "+", "Высокая", "Маркетинг", True, "Реклама привлекает новых клиентов"],
        ["Рекламный бюджет", "Затраты", "+", "Высокая", "Финансы", True, "Реклама увеличивает затраты"],
        ["Затраты", "Прибыль", "-", "Высокая", "Финансы", True, "Рост затрат снижает прибыль"],
        ["Эффективность логистики", "Время доставки", "-", "Высокая", "Логистика", True, "Эффективная логистика ускоряет доставку"],
        ["Время доставки", "Удовлетворенность клиентов", "-", "Средняя", "Сервис", True, "Быстрая доставка повышает удовлетворенность"],
        ["Обучение персонала", "Эффективность работы", "+", "Средняя", "HR", True, "Обучение повышает эффективность"],
        ["Эффективность работы", "Затраты", "-", "Низкая", "Операции", True, "Эффективность снижает операционные затраты"],
        ["Сезонность", "Количество заказов", "+", "Высокая", "Внешние факторы", True, "Сезонность влияет на спрос"],
        ["Технологические инновации", "Эффективность работы", "+", "Высокая", "IT", True, "Инновации повышают эффективность"],
        ["Уровень сервиса", "Удовлетворенность клиентов", "+", "Высокая", "Сервис", True, "Качество сервиса влияет на удовлетворенность"],
        ["Скорость ответа на запросы", "Уровень сервиса", "+", "Средняя", "Поддержка", True, "Быстрые ответы улучшают сервис"],
        
        # Несколько связей для тестирования фильтрации
        ["Внешняя экономика", "Количество заказов", "+", "Низкая", "Макрофакторы", False, "Внешний фактор для тестирования фильтра"],
        ["Погодные условия", "Время доставки", "+", "Низкая", "Логистика", False, "Тестовая связь для исключения"]
    ]

    cld_df = pd.DataFrame(
        cld_data,
        columns=["Источник", "Цель", "Знак влияния", "Сила влияния", "Операция", "Учитывать в CLD", "Описание"]
    )

    # Создаем Excel файл с двумя вкладками
    with pd.ExcelWriter('test_business_process.xlsx', engine='openpyxl') as writer:
        business_process_df.to_excel(writer, sheet_name='Бизнес-процесс', index=False)
        cld_df.to_excel(writer, sheet_name='CLD_data', index=False)
        
        # Получаем workbook и worksheet объекты для форматирования
        workbook = writer.book
        worksheet_bp = writer.sheets['Бизнес-процесс']
        worksheet_cld = writer.sheets['CLD_data']
        
        # Автоподбор ширины колонок для лучшего отображения
        for column in worksheet_bp.columns:
            max_length = 0
            column_letter = column[0].column_letter
            for cell in column:
                try:
                    if len(str(cell.value)) > max_length:
                        max_length = len(str(cell.value))
                except:
                    pass
            adjusted_width = min(max_length + 2, 50)
            worksheet_bp.column_dimensions[column_letter].width = adjusted_width
        
        for column in worksheet_cld.columns:
            max_length = 0
            column_letter = column[0].column_letter
            for cell in column:
                try:
                    if len(str(cell.value)) > max_length:
                        max_length = len(str(cell.value))
                except:
                    pass
            adjusted_width = min(max_length + 2, 50)
            worksheet_cld.column_dimensions[column_letter].width = adjusted_width

    print("✅ Тестовый Excel файл успешно создан!")
    print("📊 Вкладка 'Бизнес-процесс': 25 операций интернет-магазина")
    print("🔄 Вкладка 'CLD_data': 32 причинно-следственные связи с циклами")
    print("📁 Файл: test_business_process.xlsx")

def analyze_test_data():
    """Анализирует тестовые данные и показывает возможные циклы"""
    
    # Анализ циклов в CLD данных
    cld_data = [
        ["Количество клиентов", "Количество заказов", "+"],
        ["Количество заказов", "Загрузка склада", "+"],
        ["Загрузка склада", "Время обработки", "+"],
        ["Время обработки", "Удовлетворенность клиентов", "-"],
        ["Удовлетворенность клиентов", "Количество клиентов", "+"],
    ]
    
    print("\n🔍 Обнаруженные циклы в тестовых данных:")
    print("1. Основной цикл балансировки:")
    print("   Количество клиентов → Количество заказов → Загрузка склада → Время обработки → Удовлетворенность клиентов → Количество клиентов")
    print("   Тип: Балансирующая петля (B) - стабилизирует рост")
    
    print("\n2. Цикл качества:")
    print("   Удовлетворенность клиентов → Количество жалоб → Затраты на поддержку → Прибыль → Инвестиции в качество → Качество продукции → Удовлетворенность клиентов")
    print("   Тип: Усиливающая петля (R) - может как улучшать, так и ухудшать ситуацию")
    
    print("\n3. Цикл затрат:")
    print("   Рекламный бюджет → Количество клиентов → Выручка → Прибыль → Рекламный бюджет")
    print("   Тип: Усиливающая петля (R) - цикл роста")

if __name__ == "__main__":
    create_test_excel_file()
    analyze_test_data()